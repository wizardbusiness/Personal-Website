---
import CommonLayout from "../layouts/common-layout.astro";
import MainLayout from "../layouts/main-layout.astro";
import Nav from "../components/Nav.astro";
import NavController from "../components/NavController";
import TaglineContainer from "../components/TaglineContainer";
import TaglineMsg from "../components/TaglineMsg";
import Skyline from "../components/bgEffects/Skyline";
import About from "../components/About.astro";
import Portfolio from "../components/Portfolio.astro";
import Tech from "../components/Tech.astro";
import IllHandleTheRest from "../components/flavorText/IllHandleTheRest.astro";
import YouDreamIt from "../components/flavorText/YouDreamIt.astro";
import { Icon } from "astro-icon";
---

<CommonLayout>
  <MainLayout data-info-page slot="page">
    <Nav slot="nav">
      <NavController client:load navDirection="prev" pageUrl="/lunar-dev">
        <Icon
          pack="ph"
          name="caret-down"
          height="60"
          width="60"
          data-scroll-icon
          class="animate-pulse cursor-pointer self-center text-gray-100"
        />
      </NavController>
    </Nav>
    <div
      data-subheader-main
      class="relative z-10 flex h-32 w-2/3 animate-fall-to justify-center"
      slot="subheader"
    >
      <Skyline client:load />
      <TaglineContainer repositTxt={true} animateBg client:load>
        <TaglineMsg
          msg="Dream it. Build it."
          blinkCursor={false}
          client:load
          transition:persist="taglineMsg"
        />
      </TaglineContainer>
    </div>
    <About slot="about" />

    <Portfolio slot="portfolio" />
    <YouDreamIt slot="flav-text-a" />
    <Tech slot="tech" />
    <IllHandleTheRest slot="flav-text-b" />
  </MainLayout>
</CommonLayout>
<script>
  const infoContainer = document.querySelector("[data-info-container]");
  const handleStopPropagation = (e: WheelEvent) => e.stopPropagation();
  infoContainer.addEventListener("wheel", handleStopPropagation);

  const url = location.href;
  if (url.includes("Main")) {
    const header: HTMLElement = document.querySelector("header");
    const subHeader: HTMLElement = document.querySelector(
      "[data-subheader-main]",
    );
    const content: HTMLElement = document.querySelector(
      "[data-info-container]",
    );
    const mainContainer = document.querySelector("main");
    const handleExpandContent = (header: HTMLElement, content: HTMLElement) => {
      const headerHeight = header.getBoundingClientRect().height;
      header.classList.add("hide");
      subHeader.classList.add("shrink");
      content.classList.add("expand");
      mainContainer.classList.add("expand");
    };

    const handleShowHeader = (header: HTMLElement, content: HTMLElement) => {
      header.classList.remove("hide");
      subHeader.classList.remove("hide");
      content.classList.remove("expand");
      mainContainer.classList.remove("expand");
    };

    content.addEventListener("wheel", (e: WheelEvent) => {
      e.deltaY < 0 && content.scrollTop <= 0
        ? handleShowHeader(header, content)
        : handleExpandContent(header, content);
    });
    let touchStartPosit: number;
    let touchEndPosit: number;
    content.addEventListener("touchstart", (e: TouchEvent) => {
      touchStartPosit = e.touches[0].clientY;
    });
    content.addEventListener("touchmove", (e: TouchEvent) => {
      touchEndPosit = e.touches[0].clientY;
      touchStartPosit < touchEndPosit && content.scrollTop <= 0
        ? handleShowHeader(header, content)
        : handleExpandContent(header, content);
    });
  }
</script>
