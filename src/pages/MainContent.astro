---
import MainLayout from "../layouts/main-layout.astro";
import ContentLayout from "../layouts/content-layout.astro";
import Nav from "./components/Nav.astro";
import ScrollToPageBtn from "./components/ScrollToPageUtility.astro";
import TaglineContainer from "./components/TaglineContainer";
import TaglineMsg from "./components/TaglineMsg";
import AnimatedSkyline from "./components/AnimatedSkyline";
import About from "./components/About.astro";
import Portfolio from "./components/Portfolio.astro";
import Tech from "./components/Tech.astro";
import Slogan from "./components/Slogan.astro";
---

<MainLayout>
  <ContentLayout data-info-page slot="page">
    <Nav slot="nav">
      <div data-scrollable class="h-1/2 w-fit self-center justify-self-center">
        <ScrollToPageBtn scrollDirection="up" url="/" />
      </div>
    </Nav>
    <div
      data-subheader-main
      class="relative z-10 flex h-32 w-2/3 animate-fall-to justify-center"
      slot="subheader"
    >
      <AnimatedSkyline client:load />
      <TaglineContainer repositTxt={true} animateBg client:load>
        <TaglineMsg
          msg="Dream it. Build it."
          blinkCursor={false}
          client:load
          transition:persist="taglineMsg"
        />
      </TaglineContainer>
    </div>
    <About slot="about" />
    <Portfolio slot="portfolio" />
    <Tech slot="tech" />
    <Slogan slot="slogan" />
    <script>
      const header = document.querySelector("header");
      const info = document.querySelector("[data-info-container]");
      // const headerHeight = header.getBoundingClientRect().height;
      const handleShowHeader = (e, header, content) => {
        if (header.classList.contains("hide")) {
          header.classList.remove("hide");
          content.classList.remove("expand");
        }
        header.classList.add("show");
        content.classList.add("contract");
      };

      const handleHideHeader = (e, header, content) => {
        content.classList.remove("animate-impact");

        if (header.classList.contains("show")) {
          header.classList.remove("show");
          content.classList.remove("contract");
        }
        header.classList.add("hide");
        content.classList.add("expand");
      };
      info.addEventListener("wheel", (e: WheelEvent) => {
        e.deltaY < 0
          ? handleShowHeader(e, header, info)
          : handleHideHeader(e, header, info);
      });
    </script>
  </ContentLayout>
</MainLayout>
