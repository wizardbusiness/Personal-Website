---
import MainLayout from "../layouts/main-layout.astro";
import ContentLayout from "../layouts/content-layout.astro";
import Nav from "./components/Nav.astro";
import ScrollToPageBtn from "./components/ScrollToPageUtility.astro";
import TaglineContainer from "./components/TaglineContainer";
import TaglineMsg from "./components/TaglineMsg";
import AnimatedSkyline from "./components/AnimatedSkyline";
import About from "./components/About.astro";
import Portfolio from "./components/Portfolio.astro";
import Tech from "./components/Tech.astro";
import Slogan from "./components/Slogan.astro";
---

<MainLayout>
  <ContentLayout data-info-page slot="page">
    <Nav slot="nav">
      <ScrollToPageBtn scrollDirection="up" url="/" />
    </Nav>
    <div
      data-subheader-main
      class="relative z-10 flex h-32 w-2/3 animate-fall-to justify-center"
      slot="subheader"
    >
      <AnimatedSkyline client:load />
      <TaglineContainer repositTxt={true} animateBg client:load>
        <TaglineMsg
          msg="Dream it. Build it."
          blinkCursor={false}
          client:load
          transition:persist="taglineMsg"
        />
      </TaglineContainer>
    </div>
    <About slot="about" />
    <Portfolio slot="portfolio" />
    <Tech slot="tech" />
    <Slogan slot="slogan" />
  </ContentLayout>
</MainLayout>
<script>
  document.addEventListener("astro:page-load", () => {
    const header = document.querySelector("header");
    const subHeader = document.querySelector("[data-subheader-main]");
    const content = document.querySelector("[data-info-container]");
    const mainContainer = document.querySelector("main");
    let disableScroll = true;
    const handleExpandContent = (e, header, content) => {
      header.classList.add("hide");
      subHeader.classList.add("hide");
      content.classList.add("expand");
      mainContainer.classList.add("expand");
      if (disableScroll) e.preventDefault();
    };

    const handleShowHeader = (e, header, content) => {
      header.classList.remove("hide");
      subHeader.classList.remove("hide");
      content.classList.remove("expand");
      mainContainer.classList.remove("expand");
    };
    header.addEventListener("transitionend", (e) => {
      disableScroll = disableScroll === true ? false : true;
    });

    content.addEventListener("wheel", (e: WheelEvent) => {
      e.deltaY > 0
        ? handleExpandContent(e, header, content)
        : handleShowHeader(e, header, content);
    });
  });
</script>
